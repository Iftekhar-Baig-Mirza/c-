Given a sentence, reverse the entire sentence word-by-word.
Note: Solve using stack or in-place swap. Do not simply scan, split and print in reverse order.

Input Format

First line of input contains T - number of test cases. Its followed by T lines, each contains a sentence S of space separated words of lowercase english alphabet. All the words are separated by a single space.

Constraints

1 <= T <= 1000
1 <= len(S) <= 1000

Output Format

For each test case, print the reversed sentence, separated by newline.



//code for the above problem


#include <bits/stdc++.h>
using namespace std;
int main()
{
  int t,i;
  cin>>t;
  string str,temp,word;
  getline(cin,temp);
  while(t--){
      stack<string>st;
      getline(cin,str);
      for(i=0;i<str.length();i++){
          if(str[i]!=' '){
              word=word+str[i];
          }
          else{
              st.push(word);
              word.clear();
          }
      } 
      st.push(word);
      word.clear();
      while(!st.empty()){
          cout<<st.top()<<" ";
          st.pop();
      }
      cout<<"\n";
  }
//my code
}